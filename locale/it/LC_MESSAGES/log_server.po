# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Nethesis Srl and the NethServer project contributors
# This file is distributed under the same license as the NS8 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: NS8 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-22 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: it\n"
"Language-Team: it <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../log_server.rst:5
msgid "System logs"
msgstr ""

#: ../../log_server.rst:7
msgid ""
"Almost everything is logged inside journalctl and sent to the local log "
"server."
msgstr ""

#: ../../log_server.rst:9
msgid ""
"By default, `Grafana Loki <https://grafana.com/oss/loki/>`_ is installed "
"inside the leader node, it collects the logs from all cluster nodes. A "
"rootfull `Promtail "
"<https://grafana.com/docs/loki/latest/clients/promtail/>`_ container runs"
" on all nodes, including the leader one. It sends all logs to the Loki "
"server."
msgstr ""

#: ../../log_server.rst:14
msgid "From the leader node, it is possible to query the logs of all nodes."
msgstr ""

#: ../../log_server.rst:16
msgid ""
"Logs are accessible from ``System logs`` page. You can filter logs by "
"date, a text query or context. Available contexts are:"
msgstr ""

#: ../../log_server.rst:19
msgid "``cluster``: all logs from any source"
msgstr ""

#: ../../log_server.rst:20
msgid "``node``: all logs from a given node"
msgstr ""

#: ../../log_server.rst:21
msgid ""
"``app``: logs from a given application instance, regardless where it's "
"currently running"
msgstr ""

#: ../../log_server.rst:23
msgid ""
"You can see just a subset of the lines or follow the log to see what's "
"happening in real time."
msgstr ""

#: ../../log_server.rst:25
msgid ""
"Sometimes is useful to compare the logs of two applications side-by-side."
" You can do it by following these steps:"
msgstr ""

#: ../../log_server.rst:28
msgid "setup the filter for a refined search"
msgstr ""

#: ../../log_server.rst:29
msgid "click on :guilabel:`Add search` button"
msgstr ""

#: ../../log_server.rst:30
msgid "setup the new filter"
msgstr ""

#: ../../log_server.rst:31
msgid "select ``Vertical layout`` from the three-dots menu"
msgstr ""

#: ../../log_server.rst:33
msgid "Logs are now shown side-by-side to easily correlate events."
msgstr ""

#: ../../log_server.rst:36
msgid "Command line"
msgstr ""

#: ../../log_server.rst:40
msgid ""
"If you're familiar with the command line, recent logs are available using"
" ``journalctl`` command and services can be inspected using ``systemctl``"
" command. As root use ``journalctl`` to see messages from agents, "
"rootfull and rootless modules."
msgstr ""

#: ../../log_server.rst:44
msgid ""
"You can also use the ``api-server-logs`` to query directly the Loki "
"server. Example to inspect the log of `traefik1` module: ::"
msgstr ""

#: ../../log_server.rst:49
msgid ""
"You can also enable the automatic completion for the above command. "
"First, install the ``bash-completion`` package."
msgstr ""

#: ../../log_server.rst:52
msgid "On RHEL-like distributions: ::"
msgstr ""

#: ../../log_server.rst:56
msgid "On Debian distribution: ::"
msgstr ""

#: ../../log_server.rst:60
msgid "Then, generate the completion script: ::"
msgstr ""

#: ../../log_server.rst:64
msgid "Logout and login from the shell to enable the completion."
msgstr ""

